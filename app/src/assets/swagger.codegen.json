{
  "openapi": "3.0.0",
  "info": { "title": "BotBeri API", "version": "0.1.0" },
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["auth"],
        "summary": "Register",
        "operationId": "register_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RegisterIn" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Message" } }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          }
        }
      }
    },
    "/auth/verify-email": {
      "post": {
        "tags": ["auth"],
        "summary": "Verify Email",
        "operationId": "verify_email_auth_verify_email_post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/VerifyEmailIn" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TokenPair" } }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "Login",
        "operationId": "login_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/LoginIn" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TokenPair" } }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["auth"],
        "summary": "Refresh",
        "operationId": "refresh_auth_refresh_post",
        "parameters": [
          {
            "name": "X-Session-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Session-Token"
            }
          },
          {
            "name": "X-Refresh-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Refresh-Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TokenPair" } }
            }
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unprocessable Entity"
          },
          "429": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["auth"],
        "summary": "Logout",
        "operationId": "logout_auth_logout_post",
        "parameters": [
          {
            "name": "X-Session-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Session-Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Message" } }
            }
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unprocessable Entity"
          },
          "429": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": ["auth"],
        "summary": "Forgot Password",
        "operationId": "forgot_password_auth_forgot_password_post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ForgotPasswordIn" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Message" } }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": ["auth"],
        "summary": "Reset Password",
        "operationId": "reset_password_auth_reset_password_post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ResetPasswordIn" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Message" } }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            }
          }
        }
      }
    },
    "/auth/change-password": {
      "post": {
        "tags": ["auth"],
        "summary": "Change Password",
        "operationId": "change_password_auth_change_password_post",
        "parameters": [
          {
            "name": "X-Session-Token",
            "in": "header",
            "required": false,
            "schema": { "title": "X-Session-Token" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ChangePasswordIn" } }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TokenPair" } }
            }
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unprocessable Entity"
          },
          "429": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/bots": {
      "get": {
        "tags": ["bots"],
        "summary": "List Bots",
        "operationId": "list_bots_bots_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/BotOut" },
                  "title": "Response List Bots Bots Get"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unprocessable Entity"
          },
          "429": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["bots"],
        "summary": "Create Bot",
        "operationId": "create_bot_bots_post",
        "parameters": [
          {
            "name": "X-Admin-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Admin-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/BotCreate" } }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BotOut" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/bots/{bot_id}": {
      "put": {
        "tags": ["bots"],
        "summary": "Update Bot",
        "operationId": "update_bot_bots__bot_id__put",
        "parameters": [
          {
            "name": "bot_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Bot Id" }
          },
          {
            "name": "X-Admin-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Admin-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/BotUpdate" } }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BotOut" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["bots"],
        "summary": "Delete Bot",
        "operationId": "delete_bot_bots__bot_id__delete",
        "parameters": [
          {
            "name": "bot_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Bot Id" }
          },
          {
            "name": "X-Admin-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Admin-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/instances": {
      "get": {
        "tags": ["instances"],
        "summary": "List Instances",
        "operationId": "list_instances_instances_get",
        "parameters": [
          {
            "name": "X-Session-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Session-Token"
            }
          },
          {
            "name": "X-Refresh-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Refresh-Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/InstanceOut" },
                  "title": "Response List Instances Instances Get"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unprocessable Entity"
          },
          "429": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["instances"],
        "summary": "Create Instance",
        "operationId": "create_instance_instances_post",
        "parameters": [
          {
            "name": "X-Session-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Session-Token"
            }
          },
          {
            "name": "X-Refresh-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Refresh-Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/InstanceCreate" } }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InstanceOut" } }
            }
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unprocessable Entity"
          },
          "429": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/instances/{iid}": {
      "get": {
        "tags": ["instances"],
        "summary": "Get Instance",
        "operationId": "get_instance_instances__iid__get",
        "parameters": [
          {
            "name": "iid",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Iid" }
          },
          {
            "name": "X-Session-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Session-Token"
            }
          },
          {
            "name": "X-Refresh-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Refresh-Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InstanceDetailOut" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["instances"],
        "summary": "Update Instance",
        "operationId": "update_instance_instances__iid__put",
        "parameters": [
          {
            "name": "iid",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Iid" }
          },
          {
            "name": "X-Session-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Session-Token"
            }
          },
          {
            "name": "X-Refresh-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Refresh-Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/InstanceUpdate" } }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InstanceOut" } }
            }
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unprocessable Entity"
          },
          "429": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["instances"],
        "summary": "Delete Instance",
        "operationId": "delete_instance_instances__iid__delete",
        "parameters": [
          {
            "name": "iid",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Iid" }
          },
          {
            "name": "X-Session-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Session-Token"
            }
          },
          {
            "name": "X-Refresh-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Refresh-Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unprocessable Entity"
          },
          "429": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/instances/{iid}/status": {
      "patch": {
        "tags": ["instances"],
        "summary": "Set Instance Status",
        "operationId": "set_instance_status_instances__iid__status_patch",
        "parameters": [
          {
            "name": "iid",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Iid" }
          },
          {
            "name": "X-Admin-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Admin-Token"
            }
          },
          {
            "name": "X-Session-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Session-Token"
            }
          },
          {
            "name": "X-Refresh-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Refresh-Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InstanceStatusUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/InstanceOut" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/instances/{iid}/kb/entries": {
      "post": {
        "tags": ["instances"],
        "summary": "Kb Add Entry",
        "operationId": "kb_add_entry_instances__iid__kb_entries_post",
        "parameters": [
          {
            "name": "iid",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Iid" }
          },
          {
            "name": "X-Session-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Session-Token"
            }
          },
          {
            "name": "X-Refresh-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Refresh-Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/KBEntryCreate" } }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/KBEntryOut" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/instances/{iid}/kb/entries/{entry_id}": {
      "delete": {
        "tags": ["instances"],
        "summary": "Kb Delete Entry Route",
        "operationId": "kb_delete_entry_route_instances__iid__kb_entries__entry_id__delete",
        "parameters": [
          {
            "name": "iid",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Iid" }
          },
          {
            "name": "entry_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Entry Id" }
          },
          {
            "name": "X-Session-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Session-Token"
            }
          },
          {
            "name": "X-Refresh-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Refresh-Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/instances/{iid}/status-events": {
      "get": {
        "tags": ["instances"],
        "summary": "Get Status Events",
        "operationId": "get_status_events_instances__iid__status_events_get",
        "parameters": [
          {
            "name": "iid",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Iid" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "minimum": 0, "default": 0, "title": "Offset" }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string", "format": "date-time" }, { "type": "null" }],
              "title": "From"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string", "format": "date-time" }, { "type": "null" }],
              "title": "To"
            }
          },
          {
            "name": "X-Session-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Session-Token"
            }
          },
          {
            "name": "X-Refresh-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Refresh-Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/StatusEventOut" },
                  "title": "Response Get Status Events Instances  Iid  Status Events Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/instances/{iid}/stats": {
      "get": {
        "tags": ["instances"],
        "summary": "Get Instance Stats",
        "operationId": "get_instance_stats_instances__iid__stats_get",
        "parameters": [
          {
            "name": "iid",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Iid" }
          },
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "date-time", "title": "From" }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "date-time", "title": "To" }
          },
          {
            "name": "include_segments",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean", "default": false, "title": "Include Segments" }
          },
          {
            "name": "X-Session-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Session-Token"
            }
          },
          {
            "name": "X-Refresh-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Refresh-Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StatusStatsOut" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "tags": ["admin"],
        "summary": "List Users",
        "operationId": "list_users_admin_users_get",
        "parameters": [
          {
            "name": "X-Admin-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Admin-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UserOut" },
                  "title": "Response List Users Admin Users Get"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unprocessable Entity"
          },
          "429": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/users/{uid}": {
      "get": {
        "tags": ["admin"],
        "summary": "Get User",
        "operationId": "get_user_admin_users__uid__get",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Uid" }
          },
          {
            "name": "X-Admin-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Admin-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UserOut" } }
            }
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unprocessable Entity"
          },
          "429": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": ["admin"],
        "summary": "Patch User",
        "operationId": "patch_user_admin_users__uid__patch",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Uid" }
          },
          {
            "name": "X-Admin-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Admin-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "type": "object", "title": "Data" } } }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UserOut" } }
            }
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unprocessable Entity"
          },
          "429": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["users"],
        "summary": "Get Me",
        "operationId": "get_me_users_me_get",
        "parameters": [
          {
            "name": "X-Session-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Session-Token"
            }
          },
          {
            "name": "X-Refresh-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Refresh-Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UserOut" } }
            }
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unprocessable Entity"
          },
          "429": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": ["users"],
        "summary": "Update Me",
        "operationId": "update_me_users_me_patch",
        "parameters": [
          {
            "name": "X-Session-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Session-Token"
            }
          },
          {
            "name": "X-Refresh-Token",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Refresh-Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UserUpdate" } }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UserOut" } }
            }
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Unprocessable Entity"
          },
          "429": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } }
            },
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BotCreate": {
        "properties": {
          "title": { "type": "string", "title": "Title" },
          "description": { "type": "string", "title": "Description" },
          "content": { "type": "object", "title": "Content", "default": {} },
          "activation_code": { "type": "string", "title": "Activation Code" },
          "rate": { "type": "integer", "title": "Rate" }
        },
        "type": "object",
        "required": ["title", "description", "activation_code", "rate"],
        "title": "BotCreate"
      },
      "BotOut": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "title": { "type": "string", "title": "Title" },
          "description": { "type": "string", "title": "Description" },
          "content": { "type": "object", "title": "Content" },
          "activation_code": { "type": "string", "title": "Activation Code" },
          "rate": { "type": "integer", "title": "Rate" }
        },
        "type": "object",
        "required": ["id", "title", "description", "content", "activation_code", "rate"],
        "title": "BotOut"
      },
      "BotUpdate": {
        "properties": {
          "title": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Title" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "content": { "anyOf": [{ "type": "object" }, { "type": "null" }], "title": "Content" },
          "activation_code": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Activation Code"
          },
          "rate": { "anyOf": [{ "type": "integer" }, { "type": "null" }], "title": "Rate" }
        },
        "type": "object",
        "title": "BotUpdate"
      },
      "ChangePasswordIn": {
        "properties": {
          "current_password": { "type": "string", "title": "Current Password" },
          "new_password": { "type": "string", "minLength": 6, "title": "New Password" }
        },
        "type": "object",
        "required": ["current_password", "new_password"],
        "title": "ChangePasswordIn"
      },
      "ErrorCode": {
        "type": "string",
        "enum": [
          "internal_error",
          "bad_request",
          "validation_error",
          "unauthorized",
          "forbidden",
          "not_found",
          "conflict",
          "rate_limited",
          "service_unavailable",
          "timeout",
          "email_already_registered",
          "phone_already_registered",
          "invalid_credentials",
          "login_blocked",
          "email_not_verified",
          "verification_code_invalid",
          "verification_code_expired",
          "verification_resend_too_soon",
          "token_missing",
          "token_invalid",
          "token_expired",
          "session_invalid",
          "session_expired",
          "admin_token_invalid",
          "password_too_weak",
          "password_same_as_old",
          "password_reset_invalid",
          "password_reset_expired",
          "password_reset_used",
          "user_not_found",
          "user_update_failed",
          "user_balance_too_low",
          "bot_not_found",
          "bot_already_exists",
          "bot_activation_code_invalid",
          "bot_rate_invalid",
          "bot_delete_forbidden",
          "instance_not_found",
          "instance_creation_failed",
          "instance_id_already_exists",
          "instance_config_invalid",
          "instance_already_active",
          "instance_already_paused",
          "instance_not_enough_balance",
          "email_send_failed",
          "mail_transport_unavailable",
          "database_error",
          "unique_constraint_violation",
          "redis_error",
          "external_api_error",
          "external_api_timeout",
          "external_api_unauthorized",
          "config_error"
        ],
        "title": "ErrorCode"
      },
      "ErrorResponse": {
        "properties": {
          "error_code": { "$ref": "#/components/schemas/ErrorCode" },
          "user_message": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "User Message"
          },
          "details": { "anyOf": [{ "type": "object" }, { "type": "null" }], "title": "Details" }
        },
        "type": "object",
        "required": ["error_code"],
        "title": "ErrorResponse"
      },
      "ForgotPasswordIn": {
        "properties": { "email": { "type": "string", "format": "email", "title": "Email" } },
        "type": "object",
        "required": ["email"],
        "title": "ForgotPasswordIn"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InstanceCreate": {
        "properties": {
          "bot_id": { "type": "integer", "title": "Bot Id" },
          "title": { "type": "string", "title": "Title" },
          "config": { "type": "object", "title": "Config", "default": {} }
        },
        "type": "object",
        "required": ["bot_id", "title"],
        "title": "InstanceCreate"
      },
      "InstanceDetailOut": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "user_id": { "type": "integer", "title": "User Id" },
          "bot_id": { "type": "integer", "title": "Bot Id" },
          "instance_id": { "type": "string", "title": "Instance Id" },
          "title": { "type": "string", "title": "Title" },
          "config": { "type": "object", "title": "Config" },
          "status": { "$ref": "#/components/schemas/InstanceStatus" },
          "kb": {
            "anyOf": [{ "$ref": "#/components/schemas/KnowledgeBaseOut" }, { "type": "null" }]
          }
        },
        "type": "object",
        "required": ["id", "user_id", "bot_id", "instance_id", "title", "config", "status"],
        "title": "InstanceDetailOut"
      },
      "InstanceOut": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "user_id": { "type": "integer", "title": "User Id" },
          "bot_id": { "type": "integer", "title": "Bot Id" },
          "instance_id": { "type": "string", "title": "Instance Id" },
          "title": { "type": "string", "title": "Title" },
          "config": { "type": "object", "title": "Config" },
          "status": { "$ref": "#/components/schemas/InstanceStatus" }
        },
        "type": "object",
        "required": ["id", "user_id", "bot_id", "instance_id", "title", "config", "status"],
        "title": "InstanceOut"
      },
      "InstanceStatus": {
        "type": "string",
        "enum": [
          "active",
          "paused",
          "not_enough_balance",
          "provisioning",
          "inactive",
          "updating",
          "deleting",
          "error",
          "unknown"
        ],
        "title": "InstanceStatus"
      },
      "InstanceStatusUpdate": {
        "properties": { "status": { "$ref": "#/components/schemas/InstanceStatus" } },
        "type": "object",
        "required": ["status"],
        "title": "InstanceStatusUpdate"
      },
      "InstanceUpdate": {
        "properties": {
          "title": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Title" },
          "config": { "anyOf": [{ "type": "object" }, { "type": "null" }], "title": "Config" },
          "status": {
            "anyOf": [{ "$ref": "#/components/schemas/InstanceStatus" }, { "type": "null" }]
          }
        },
        "type": "object",
        "title": "InstanceUpdate"
      },
      "KBDataType": { "type": "string", "enum": ["document", "video"], "title": "KBDataType" },
      "KBEntryCreate": {
        "properties": {
          "content": { "type": "string", "title": "Content" },
          "data_type": {
            "anyOf": [{ "$ref": "#/components/schemas/KBDataType" }, { "type": "null" }]
          },
          "lang_hint": {
            "anyOf": [{ "$ref": "#/components/schemas/KBLangHint" }, { "type": "null" }]
          }
        },
        "type": "object",
        "required": ["content"],
        "title": "KBEntryCreate"
      },
      "KBEntryOut": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "content": { "type": "string", "title": "Content" },
          "data_type": { "$ref": "#/components/schemas/KBDataType" },
          "lang_hint": { "$ref": "#/components/schemas/KBLangHint" },
          "status": { "$ref": "#/components/schemas/KBEntryStatus" },
          "external_entry_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "External Entry Id"
          },
          "execution_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Execution Id"
          }
        },
        "type": "object",
        "required": ["id", "content", "data_type", "lang_hint", "status"],
        "title": "KBEntryOut"
      },
      "KBEntryStatus": {
        "type": "string",
        "enum": ["in_progress", "done", "timeout", "failed"],
        "title": "KBEntryStatus"
      },
      "KBLangHint": {
        "type": "string",
        "enum": [
          "ru",
          "en",
          "uk",
          "tr",
          "de",
          "fr",
          "es",
          "it",
          "pt",
          "pl",
          "kk",
          "uz",
          "az",
          "ka",
          "ro",
          "nl",
          "sv",
          "no",
          "da",
          "fi",
          "cs",
          "sk",
          "bg",
          "sr",
          "hr",
          "sl",
          "et",
          "lt",
          "lv",
          "el",
          "he",
          "ar",
          "fa",
          "hi",
          "ur",
          "bn",
          "ta",
          "te",
          "ml",
          "id",
          "ms",
          "th",
          "vi",
          "zh",
          "ja",
          "ko"
        ],
        "title": "KBLangHint"
      },
      "KnowledgeBaseOut": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "entries": {
            "items": { "$ref": "#/components/schemas/KBEntryOut" },
            "type": "array",
            "title": "Entries",
            "default": []
          }
        },
        "type": "object",
        "required": ["id"],
        "title": "KnowledgeBaseOut"
      },
      "LoginIn": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" },
          "password": { "type": "string", "title": "Password" }
        },
        "type": "object",
        "required": ["email", "password"],
        "title": "LoginIn"
      },
      "Message": {
        "properties": { "message": { "type": "string", "title": "Message" } },
        "type": "object",
        "required": ["message"],
        "title": "Message"
      },
      "RegisterIn": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "surname": { "type": "string", "title": "Surname" },
          "email": { "type": "string", "format": "email", "title": "Email" },
          "phone": { "type": "string", "title": "Phone" },
          "password": { "type": "string", "minLength": 6, "title": "Password" },
          "telegram": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Telegram" }
        },
        "type": "object",
        "required": ["name", "surname", "email", "phone", "password"],
        "title": "RegisterIn"
      },
      "ResetPasswordIn": {
        "properties": {
          "token": { "type": "string", "title": "Token" },
          "new_password": { "type": "string", "minLength": 6, "title": "New Password" }
        },
        "type": "object",
        "required": ["token", "new_password"],
        "title": "ResetPasswordIn"
      },
      "StatusEventOut": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "changed_at": { "type": "string", "format": "date-time", "title": "Changed At" },
          "from_status": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "From Status"
          },
          "to_status": { "type": "string", "title": "To Status" }
        },
        "type": "object",
        "required": ["id", "changed_at", "from_status", "to_status"],
        "title": "StatusEventOut"
      },
      "StatusSegmentOut": {
        "properties": {
          "start": { "type": "string", "format": "date-time", "title": "Start" },
          "end": { "type": "string", "format": "date-time", "title": "End" },
          "status": { "$ref": "#/components/schemas/InstanceStatus" },
          "seconds": { "type": "integer", "title": "Seconds" }
        },
        "type": "object",
        "required": ["start", "end", "status", "seconds"],
        "title": "StatusSegmentOut"
      },
      "StatusStatsOut": {
        "properties": {
          "window_start": { "type": "string", "format": "date-time", "title": "Window Start" },
          "window_end": { "type": "string", "format": "date-time", "title": "Window End" },
          "total_seconds": { "type": "integer", "title": "Total Seconds" },
          "seconds_by_status": {
            "additionalProperties": { "type": "integer" },
            "type": "object",
            "title": "Seconds By Status"
          },
          "uptime_seconds": { "type": "integer", "title": "Uptime Seconds" },
          "uptime_percent": { "type": "number", "title": "Uptime Percent" },
          "segments": {
            "anyOf": [
              { "items": { "$ref": "#/components/schemas/StatusSegmentOut" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Segments"
          }
        },
        "type": "object",
        "required": [
          "window_start",
          "window_end",
          "total_seconds",
          "seconds_by_status",
          "uptime_seconds",
          "uptime_percent"
        ],
        "title": "StatusStatsOut"
      },
      "TokenPair": {
        "properties": {
          "session_token": { "type": "string", "title": "Session Token" },
          "refresh_token": { "type": "string", "title": "Refresh Token" }
        },
        "type": "object",
        "required": ["session_token", "refresh_token"],
        "title": "TokenPair"
      },
      "UserOut": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "name": { "type": "string", "title": "Name" },
          "surname": { "type": "string", "title": "Surname" },
          "email": { "type": "string", "format": "email", "title": "Email" },
          "phone": { "type": "string", "title": "Phone" },
          "telegram": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Telegram" },
          "balance": { "type": "integer", "title": "Balance" }
        },
        "type": "object",
        "required": ["id", "name", "surname", "email", "phone", "balance"],
        "title": "UserOut"
      },
      "UserUpdate": {
        "properties": {
          "name": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Name" },
          "surname": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Surname" },
          "phone": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Phone" },
          "telegram": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Telegram" }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "VerifyEmailIn": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" },
          "code": { "type": "string", "title": "Code" }
        },
        "type": "object",
        "required": ["email", "code"],
        "title": "VerifyEmailIn"
      }
    }
  }
}
